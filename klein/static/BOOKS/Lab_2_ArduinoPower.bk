{"bookName":"The Arduino&#39s Input and Output","pages":[{"name":"Overview","components":[{"type":"HTML","tag":"h1","options":{},"content":"Overview"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID0"},"content":"Circuits need power in order to work.  There are many ways to power a circuit.  In this course, we are going to use the Arduino itself to power all of your circuits.  This makes things simpler, since we won&#39t need to think about powering the Arduino and the circuit separately.  In a previous lab, we used the Arduino&#39s fixed 5V pin to power an LED, but sometimes you want to be able to turn a circuit ON or OFF without also turning off the Arduino.  In this lab we&#39ll show you how to do that."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID1"},"content":"The Arduino is what we will be using to sense things that are changing in our circuits.  In this lab we will also explore how to use the Arduino to get this input, and what some of the limitations of the Arduino&#39s input functions are."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID2"},"content":"You will need:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"UL"},{"type":"HTML","tag":"li","options":{},"content":"Your Arduino"},{"type":"HTML","tag":"li","options":{},"content":"Your USB cable"},{"type":"HTML","tag":"li","options":{},"content":"A computer"},{"type":"HTML","tag":"li","options":{},"content":"Your large breadboard"},{"type":"HTML","tag":"li","options":{},"content":"An LED (the color doesn&#39t matter)"},{"type":"HTML","tag":"li","options":{},"content":"Two 1k resistors - the resistors in your kit come with pieces of tape with the value written on them.  Find the set that say 1K, and remove two of them."},{"type":"HTML","tag":"li","options":{},"content":"Your bundle of jumper wires"},{"type":"ENDLIST"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID3"},"content":"In this lab, we will be:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"OL"},{"type":"HTML","tag":"li","options":{},"content":"Creating a programmable output voltage so that we can control when a circuit gets power using software"},{"type":"HTML","tag":"li","options":{},"content":"Using the Arduino&#39s analog input functionality to read and record voltages"},{"type":"ENDLIST"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":""},{"type":"HTML","tag":"br","options":{},"content":""}]},{"name":"Digital Out","components":[{"type":"HTML","tag":"h1","options":{},"content":"Programming a Digital Output Pin"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID4"},"content":"To begin, you will need to re-build the last circuit from the module titled \"The Arduino Kit\".  It is shown below for your convenience.  Remember to unplug the Arduino from the computer before connecting the circuit!"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"img","src":"firstLED.PNG","width":"500","height":"500","id":"firstLED"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID5"},"content":"Once the circuit is built and working, proceed with the rest of this lab."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"h2","options":{},"content":"First: what are digital output pins?"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID6"},"content":"Using the 5V pin is great for many circuits that need to be constantly powered.  However, there are cases where we want to control whether a circuit is on or off without powering down the Arduino.  For example, we might want to turn on an LED if a sensor reading is above a certain value, and turn the LED off otherwise."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID7"},"content":"The Arduino has digital output pins that allow this to happen.  Digital outputs are either ON or OFF.  When the output is ON, it is supplying 5V, just like the 5V pin.  When it is OFF, it is supplying 0V."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID8"},"content":"Look at your Arduino and you should see a set of pins with the label \"DIGITAL (PWM~)\" next to them.  They are labelled with numbers 0 through 13.  You should also notice that some of the pins have extra labels.  Pin 0 has \"RX\" next to it, pin 1 has \"TX\" next to it, and pins 3, 5, 5, 9, 10, and 11 have a \"~\" next to them."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"img","src":"digitalPins.png","width":"400","height":"400","id":"digital"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID9"},"content":"Pins 0 and 1 are special pins that we won&#39t be using in this course.  They are connected to the serial port on the Arduino.  We won&#39t use them because whenever we use the serial port to write data (using <span class=\"inlineCode\">Serial.write(...</span>), they will rapidly change from ON to OFF, and we can&#39t control what they are doing."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID10"},"content":"The pins with a \"~\" next to them can be used as a regular digital output or to output more complicated ouputs.  We will use the more complicated output features later in this course, but for today we can treat them as though they are just regular digital outputs."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"h2","options":{},"content":"Using a digital pin"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID11"},"content":"In this part we are going to modify our previous circuit, and then make an LED blink ON and OFF."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID12"},"content":"Open a new, blank Arduino sketch on the Arduino software.  Recall that there are two functions  - <span class=\"inlineCode\">setup</span> and <span class=\"inlineCode\">loop</span>.  We need to use the <span class=\"inlineCode\">setup</span> function to tell the Arduino that a particular pin is to be used as an output, and then we use the <span class=\"inlineCode\">loop</span> function to control when it is on.  Let&#39s use pin 4 today."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID13"},"content":"First, move the wire that is currently connected to the 5V pin and plug it into pin 4.  You&#39ll notice that I didn&#39t give you a diagram.  You&#39ll need to work out how to do it on your own, to help prepare you for more advanced labs."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID14"},"content":"In <span class=\"inlineCode\">setup</span>, we need to add code to indicate that pin 4 is an output.  We use the <span class=\"inlineCode\">pinMode</span> function to do so.  In between the braces (curly brackets, <span class=\"inlineCode\">{}</span>) of the <span class=\"inlineCode\">setup</span> function, add the following line, exactly as written:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID15"},"content":"<span class=\"inlineCode\">pinMode(4,OUTPUT)&#59</span>"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID16"},"content":"This line sets the mode of pin 4 to be an output."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID17"},"content":"Now it&#39s time to blink the LED.  In the <span class=\"inlineCode\">loop</span> function, we want to tell the pin to turn ON, then wait a bit, then turn it OFF, then wait a bit.  To do this we will need the <span class=\"inlineCode\">digitalWrite</span> and <span class=\"inlineCode\">delay</span> functions.  Inside of the <span class=\"inlineCode\">loop</span> function, write the following four lines:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID18"},"content":"<span class=\"inlineCode\">digitalWrite(4,HIGH)&#59 //this turns the pin ON.  It is now outputting 5V</span>"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID19"},"content":"<span class=\"inlineCode\">delay(1000)&#59 ///do nothing for 1000ms</span>"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID20"},"content":"<span class=\"inlineCode\">digitalWrite(4,LOW)&#59 ///this turns the pin OFF.  It is now outputting 0V</span>"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID21"},"content":"<span class=\"inlineCode\">delay(1000)&#59 ///do nothing again</span>"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID22"},"content":"Hopefully what you are seeing is a blinking LED."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"CHECKPOINT","tag":"h2","options":{},"content":"Checkpoint"},{"type":"HTML","tag":"h3","options":{},"content":"Deliverable 1"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID23"},"content":"Answer these questions in the writeup:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"OL"},{"type":"HTML","tag":"li","options":{},"content":"What would be different if we wanted the LED to be ON for 2 seconds and OFF for $\\frac{1}{4}$ seconds?  Show the updated Arduino code and briefly describe your changes.  Feel free to test your code to see if you&#39re right."},{"type":"HTML","tag":"li","options":{},"content":"Presume that we wanted to control two separate LEDs, one on pin 4 and one on pin 9, and that we wanted pin 4&#39s LED to be ON when pin 9&#39s LED is OFF, and vice versa.  Change the code to accomplish this, and show that updated code in your writeup."},{"type":"HTML","tag":"li","options":{},"content":"In your own words, why would you use the 5V pin compared to a programmable output pin?  Why would you use a programmable output comared to a 5V pin?"},{"type":"ENDLIST"},{"type":"ENDCHECK","tag":"hr","options":{},"content":""},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":""},{"type":"HTML","tag":"br","options":{},"content":""}]},{"name":"Analog Input","components":[{"type":"HTML","tag":"h1","options":{},"content":"Introduction to Analog Input"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"h2","options":{},"content":"Digital vs. Analog Input"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID24"},"content":"The Arduino can read voltages as well as output them.  Broadly this is called \"input\", and the Arduino can be used for digital input or analog input.  In digital input mode, the Arduino will measure the voltage on a pin and determine if it is high (5V) or low (0V).  It converts this reading into either a 1 (for high voltage) or a 0 (for low voltage), and we can store this number in the Arduino&#39s memory.  In this course, we will use the digital input rarely."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID25"},"content":"However, if you give the Arduino a voltage between 0V and 5V and try to read it using a digital input, the results will be random and undefined.  The problem is that many sensors do produce a voltage that is between 0V and 5V, and the voltage that the sensor produces is related to the variable that the sensor is measuring.  We need a way to measure these in-between voltages."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID26"},"content":"The pins that measure the in-between voltages are labelled \"Analog In\".  There are 6 analog input pins on your Arduino, and they are named A0 through A5.  They are shown below:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"img","src":"analogIn.PNG","width":"400","height":"400","id":"analog"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"h2","options":{},"content":"The loopback test"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID27"},"content":"A loopback test is a test where we plug an analog input directly into the Arduino itself.  Loopback tests are often used to determine if a circuit is working - you produce a known output, then measure that output directly to see if it is correct.  In this test we are going to do the following:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"OL"},{"type":"HTML","tag":"li","options":{},"content":"Read voltages using an analog input pin"},{"type":"HTML","tag":"li","options":{},"content":"Send data back to the PC using the <span class=\"inlineCode\">Serial</span> functionality of the Arduino"},{"type":"HTML","tag":"li","options":{},"content":"Use the Serial Monitor to view our data"},{"type":"ENDLIST"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID28"},"content":"Begin by making sure that none of the pins of the Arduino have any wires in them.  Then take a jumper wire and plug one end into the analog input \"A0\" and the other into digital pin 4, as shown:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"img","src":"loopback.PNG","width":"400","height":"400","id":"loopback"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID29"},"content":"Next, open the program that you wrote in the previous exercise to blink the LED.  Add the following code to the setup function:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID30"},"content":"<span class=\"inlineCode\">pinMode(A0,INPUT)&#59//Tell the Arduino that we are using A0 to read voltages</span>"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID31"},"content":"<span class=\"inlineCode\">Serial.begin(115200)&#59//We want to send the voltage readings to the PC</span>"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID32"},"content":"Leave the rest of the <span class=\"inlineCode\">setup</span> code as it was for the previous exercise.  Replace all of the code in <span class=\"inlineCode\">loop</span> with the following:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID33"},"content":"<span class=\"inlineCode\">digitalWrite(4,HIGH)&#59 //this turns the pin ON.  It is now outputting 5V</span>"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID34"},"content":"<span class=\"inlineCode\">Serial.println(analogRead(A0))&#59 //send the data on the serial port</span>"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID35"},"content":"<span class=\"inlineCode\">delay(1000)&#59 ///do nothing for 1000ms</span>"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID36"},"content":"<span class=\"inlineCode\">digitalWrite(4,LOW)&#59 ///this turns the pin OFF.  It is now outputting 0V</span>"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID37"},"content":"<span class=\"inlineCode\">Serial.println(analogRead(A0))&#59 //send it again</span>"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID38"},"content":"<span class=\"inlineCode\">delay(1000)&#59 ///do nothing again</span>"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID39"},"content":"Upload the code to your Arduino, then open the Serial Monitor.  Remember to set the Serial Monitor to 115200 baud.  You should see two numbers alternating - 0 and 1023.  We will learn what these numbers mean next."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"CHECKPOINT","tag":"h2","options":{},"content":"Checkpoint"},{"type":"HTML","tag":"h3","options":{},"content":"Deliverable 2"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID40"},"content":"An important thing to do with the Arduino is to take numerical data from the Serial monitor, and put it into another program, like MATLAB, for analysis.  To get the data from the monitor:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"OL"},{"type":"HTML","tag":"li","options":{},"content":"Begin by make sure that the Serial monitor is open and collecting data by ensuring that it is writing numeric values to the screen."},{"type":"HTML","tag":"li","options":{},"content":"Collect some data - at least 10 seconds worth"},{"type":"HTML","tag":"li","options":{},"content":"On the Serial monitor&#39s lower left corner is a checkbox that says \"Autoscroll\".  Uncheck that box."},{"type":"HTML","tag":"li","options":{},"content":"You can now select the numbers and use CTRL+C (on Windows) or CMD+C (on a mac) to copy the numbers to your clipboard"},{"type":"HTML","tag":"li","options":{},"content":"Paste the numbers into a notepad, Excel, or other file where you want to analyze the data"},{"type":"HTML","tag":"li","options":{},"content":"If you want to collect more data, re-check \"Autoscale\" and the monitor will bring you back to the latest data."},{"type":"ENDLIST"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID41"},"content":"Collect at least 10 seconds worth of data, then copy and paste that data into a file.  Plot the data you collected in your favorite plotting program (I recommend MATLAB).  Put the plot into your writeup document."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"ENDCHECK","tag":"hr","options":{},"content":""},{"type":"HTML","tag":"br","options":{},"content":""},{"type":"HTML","tag":"br","options":{},"content":""}]},{"name":"ADC Readings","components":[{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"h1","options":{},"content":"What do the numbers mean?"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID42"},"content":"Computers, fundamentally, store data digitally.  Analog inputs are attached to a circuit known as an Analog to Digital Converter, or ADC.  ADCs are specified in the number of \"bits\" (1s and 0s) that can be stored for a single measurement.  In general, an $N$-bit ADC can store $2^{N}-1$ possible values.  This means that the maximum reading we can get from our ADC is $2^N-1$, and the minimum value it can read is 0.  The Arduino&#39s ADC is 10-bit, so it can read from 0 to $2^{10}-1$.  It turns out that $2^{10}-1 = 1023$.  The ADC can only read integers.  That is, it can read, for example, 500 and 501, but it can&#39t read anything in between, like 500.34."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID43"},"content":"How do we interpret these numbers?  Remember that when the digital output pin is ON, it is outputting 5V, and the Arduino read 1023.  It turns out that the number 1023 maps to 5V.  The mapping is linear.  A reading of 0 corresponds to 0V, 1023 corresponds to 5V, and the voltage values increase in a straight line between those values.  The key thing we want to be able to do is turn an ADC reading into a voltage.  To convert from an ADC reading to a voltage, you multiply by the conversion factor $C_{bToV} = \\frac{5}{1023}$. You can convince yourself that this is just a unit conversion.  The readings are in \"bits\", and the conversion factor&#39s units are $\\frac{V}{bit}$."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID44"},"content":"As an example, let&#39s say that my Arduino is reading a value of 215.  To convert this to a voltage, I multiply by that conversion factor, so:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID45"},"content":"$$V = 215 \\times C_{bToV} = 1.051V$$"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"CHECKPOINT","tag":"h2","options":{},"content":"Checkpoint"},{"type":"HTML","tag":"span","options":{"id":"ID46"},"content":"Presume that your Arduino&#39s ADC is reading a value of 416.  What is the voltage that it is reading?"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"answerBox","dataString":"numeric:2.03:0.01 ","id":"numberAns1","pageNum":"4","serverside":"False"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"h3","options":{},"content":"Deliverable 3"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID47"},"content":"Answer the following question in your writeup:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID48"},"content":"The ADC can read 416 or 417, but nothing in between, like 416.5.  This means that there is a minimum difference in voltages that it can read.  Determine what this difference is, show all of your work, and briefly explain it in the writeup.  This value is known as the ADC&#39s \"resolution\".  Describe what ADC resolution means, and what some issues are when using an ADC to read a sensor if the resolution is limited."},{"type":"ENDCHECK","tag":"hr","options":{},"content":""},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":""},{"type":"HTML","tag":"br","options":{},"content":""}]},{"name":"Voltmeters","components":[{"type":"HTML","tag":"h1","options":{},"content":"Using the Arduino as a voltmeter"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID49"},"content":"A voltmeter is a device that measures, and sometimes records, voltages.  We&#39ve already seen that the Arduino can do this in the loopback test.  However, it wouldn&#39t be very useful if the Arduino could measure only its own voltages.  In this exercise, we are going to measure the voltage across a resistor in a circuit."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"h2","options":{},"content":"Voltage measurements require two wires"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID50"},"content":"There is no such thing as \"voltage at a point\" in the circuit.  Instead, we measure the voltage across an element in the circuit.  This means that we place one wire at one end of the element, and one wire at the other end.  To use the Arduino to measure voltages, then, we need two wires:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"OL"},{"type":"HTML","tag":"li","options":{},"content":"One wire goes to the analog input we want to use.  In today&#39s lab we&#39ll use A0"},{"type":"HTML","tag":"li","options":{},"content":"One wire has to go into another pin.  The pins you <b>must</b> use are labelled \"GND\", which is an old term that means \"ground\".  Today we call this \"reference\".  There are several GND pins on the Arduino, and they are all connected to each other, so you may use whichever one is convenient for you."},{"type":"ENDLIST"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID51"},"content":"From now on, we are going to call these wires \"probes\"."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID52"},"content":"When measuring voltage with the Arduino, the wire connected to A0 should be placed on the higher voltage side of the element you&#39re measuring.  You can use KVL to determine which side this is - I&#39m not going to do it for you!"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"h2","options":{},"content":"Making an Arduino Voltmeter"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID53"},"content":"In this exercise you are going to write some code.  Starting from a blank sketch, the code should:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"UL"},{"type":"HTML","tag":"li","options":{},"content":"Set the pin A0 to be an input in the <span class=\"inlineCode\">setup</span> function"},{"type":"HTML","tag":"li","options":{},"content":"Set the Serial to begin at 115200 baud in the <span class=\"inlineCode\">setup</span> function"},{"type":"HTML","tag":"li","options":{},"content":"Continually read and print A0&#39s value in <span class=\"inlineCode\">loop</span>. Use the <span class=\"inlineCode\">println</span> function for this, and only print A0&#39s value - do not print any other text or numbers."},{"type":"HTML","tag":"li","options":{},"content":"Add a <span class=\"inlineCode\">delay</span> of 200 at the end of <span class=\"inlineCode\">loop</span>"},{"type":"ENDLIST"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID54"},"content":"Create the following circuit.  Note that the two resistors are 1K resistors.  Yours may look different:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"img","src":"voltageDivider1.PNG","width":"400","height":"400","id":"vDiv1"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID55"},"content":"It is now time to take the voltage measurements.  One slight issue with using the Arduino both as a power source and as a voltmeter is that GND pin.  In the image below, we&#39ve labelled the resistors A and B.  If you were to try to measure resistor A, it wouldn&#39t do what you expect.  This is because resistor B would be connected to GND on both sides, which would be an accidental short!  For this reason, you must measure only resistor B if you want to collect some good data."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"img","src":"voltageDivider2.PNG","width":"400","height":"400","id":"vDiv2"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID56"},"content":"Add in the two wires connected to A0 and GND.  If you&#39ve written your code correctly, then when you turn on the Serial monitor you will see values of approximately 510 being printed rapidly.  You might see something slightly different, like 500, or 520, but you won&#39t see something that is very different, like 100.  If you do, something went wrong and you need to fix your circuit."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"CHECKPOINT","tag":"h2","options":{},"content":"Checkpoint"},{"type":"HTML","tag":"h3","options":{},"content":"Deliverable 4: Viewing a graph of your voltage data"},{"type":"HTML","tag":"span","options":{"id":"ID57"},"content":"Once you are certain that the voltmeter is working, perform the following experiment:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"OL"},{"type":"HTML","tag":"li","options":{},"content":"Make sure the Arduino is plugged in via the USB cable"},{"type":"HTML","tag":"li","options":{},"content":"Close the Serial Monitor"},{"type":"HTML","tag":"li","options":{},"content":"Make sure that the two probes are not in the circuit"},{"type":"HTML","tag":"li","options":{},"content":"In the Arduino software, go to Tools->Serial Plotter.  The Serial plotter works just like the Serial monitor, except it displays the data as a graph."},{"type":"HTML","tag":"li","options":{},"content":"Collect a few seconds worth of data with the probes unplugged, then, keeping the Serial plotter open and the Arduino powered, connect the probes where you had them before.  You should see the graph rapidly rise."},{"type":"HTML","tag":"li","options":{},"content":"Collect a few seconds worth of this data"},{"type":"HTML","tag":"li","options":{},"content":"Take a screenshot of the Serial plotter - unfortunately, Arduino doesn&#39t have a nice way of saving this graph"},{"type":"ENDLIST"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID58"},"content":"Include your graph and your Arduino code in the writeup."},{"type":"ENDCHECK","tag":"hr","options":{},"content":""},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID59"},"content":"From now on, there will be several times when you set up a circuit and you will be asked to read voltages in that circuit.  You will need to come back to this page and set up your Arduino as a voltmeter to do so.  We will assume in future labs that you know how to do this, so make sure you fully understood everything on this page!"},{"type":"HTML","tag":"br","options":{},"content":""},{"type":"HTML","tag":"br","options":{},"content":""}]},{"name":"Writeup","components":[{"type":"HTML","tag":"h1","options":{},"content":"Writeup"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID60"},"content":"Format your writeup so that we understand what we are looking at.  Section headings and brief descriptions are required.  Images must be centered and captioned, with the caption at the bottom of the image.  Image captions must start with a numeric identifier like \"Figure 1\".  Tables must be centered and captioned, the the caption at the top of the image.  Table captions must start with a numeric identifier like \"Table 1\"."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID61"},"content":"Figures and tables must be introduced in the text and referred to by their numeric identifier.  This can be as simple as saying \"Figure 1 shows the resistance measurement\"."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID62"},"content":"Each deliverable is worth 2 marks and is graded according to the following grading scheme.  Part marks are possible:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"OL"},{"type":"HTML","tag":"li","options":{},"content":"<b>2 marks:</b> Answer is complete, correct, and well-formatted"},{"type":"HTML","tag":"li","options":{},"content":"<b>1 mark:</b> Answer is complete and largely correct but either has an error or is poorly formatted"},{"type":"HTML","tag":"li","options":{},"content":"<b>0 marks:</b> Answer is incomplete OR completely incorrect"},{"type":"ENDLIST"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID63"},"content":"The following is taken from the other pages, and put here for ease of reference."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"h3","options":{},"content":"Deliverable 1"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID64"},"content":"Answer the following questions:"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"OL"},{"type":"HTML","tag":"li","options":{},"content":"What would be different if we wanted the LED to be ON for 2 seconds and OFF for $\\frac{1}{4}$ seconds?  Show the updated Arduino code and briefly describe your changes."},{"type":"HTML","tag":"li","options":{},"content":"Presume that we wanted to control two separate LEDs, one on pin 4 and one on pin 9, and that we wanted pin 4&#39s LED to be ON when pin 9&#39s LED is OFF, and vice versa.  Change the code to accomplish this, and show that updated code in your writeup."},{"type":"HTML","tag":"li","options":{},"content":"In your own words, why would you use the 5V pin compared to a programmable output pin?  Why would you use a programmable output comared to a 5V pin?"},{"type":"ENDLIST"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"h3","options":{},"content":"Deliverable 2"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID65"},"content":"Plot the data you collected in your favorite plotting program (I recommend MATLAB).  Put the plot into your writeup document."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"h3","options":{},"content":"Deliverable 3"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID66"},"content":"The ADC can read 416 or 417, but nothing in between, like 416.5.  This means that there is a minimum difference in voltages that it can read.  Determine what this difference is, show all of your work, and briefly explain it in the writeup.  This value is known as the ADC&#39s \"resolution\".  Describe what ADC resolution means, and what some issues are when using an ADC to read a sensor if the resolution is limited."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"h3","options":{},"content":"Deliverable 4"},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"span","options":{"id":"ID67"},"content":"Include your graph and your Arduino code in the writeup."},{"type":"HTML","tag":"br","options":{},"content":" "},{"type":"HTML","tag":"br","options":{},"content":""},{"type":"HTML","tag":"br","options":{},"content":""}]}]}